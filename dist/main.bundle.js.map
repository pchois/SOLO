{"version":3,"sources":["/Users/pablo.chois/Documents/Solo/src/$_lazy_route_resource lazy","/Users/pablo.chois/Documents/Solo/src/app/app.component.css","/Users/pablo.chois/Documents/Solo/src/app/app.component.html","/Users/pablo.chois/Documents/Solo/src/app/app.component.ts","/Users/pablo.chois/Documents/Solo/src/app/app.module.ts","/Users/pablo.chois/Documents/Solo/src/app/car-data.service.ts","/Users/pablo.chois/Documents/Solo/src/app/car-data/car-data.component.css","/Users/pablo.chois/Documents/Solo/src/app/car-data/car-data.component.html","/Users/pablo.chois/Documents/Solo/src/app/car-data/car-data.component.ts","/Users/pablo.chois/Documents/Solo/src/environments/environment.ts","/Users/pablo.chois/Documents/Solo/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pablo.chois/Documents/Solo/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../node_modules/css-loader/index.js??ref--3-1!../../node_modules/postcss-loader/lib/index.js??postcss!@angular/material/prebuilt-themes/pink-bluegrey.css\"), \"\");\n\n// module\nexports.push([module.id, \"\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pablo.chois/Documents/Solo/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<h1> Base Class Finder </h1>\\n\\n<app-car-data></app-car-data>\\n\\n<div>\\n<p><b>Hello World</b></p>\\n<p>Thank you for visiting the site. </p>\\n<p>This tool is meant to help you find your base class for autox based on SCCA rules, I have always found that process to be cumbersome so I created this tool to help the community.\\nI have tried to simplify the user experience as much as I can, the design might change based on your feedback.</p>\\n<p>I am not a developer by trade, but I do work in software QA. I learned what I needed in order to make this tool and I'm using it as a learning opportunity.\\n  If you're a developer and want to contribute send me a message and I'll share it with you (APIs were written in Nodejs\\\\Javascript and the front end using Angular 5). </p>\\n<p>I am linking this to my personal site, but the actual app lives in a different environment. At the moment that environment runs on a free instance, which means that the app\\n  goes to sleep after a certain period of inactivity. If it took a while for the link to load, this is why. The app will wake up when someone tries to use it. If the tool is well received, I'll eventually look into paying for the\\n  hosting so it runs uninterrupted.</p>\\n\\n<p><b>Design</b></p>\\n<p>- The design is based on my user experience when browsing the PDF for the Rule Book: search for a brand, find your\\nmodel, trim and\\\\or year (when available), then find your class.</p>\\n<p>- A design where you select a year, then you get available brands for that year, etc. was considered but it was\\ndiscarded because it implies a different data structure that is not easily available. Also, note that up to this point\\nthe SCCA has not provided any input, feedback or support for this tool. It is not official in any way. All the data\\nhas been extracted manually from the SCCA Rule Book PDF and manipulated to suit the purpose of this tool and my current knowledge of database management.</p>\\n<p>- There might be some spelling mistakes or other incorrect information. If you find something, please send me a comment in the link below.</p>\\n\\n<p><b>Improvements</b></p>\\n<p>I appreciate any feedback you can provide, ultimately this will help you. However, before you submit any comments please see the improvements that are currently planned:</p>\\n\\n<p>- Update data to be current (at the moment, it's valid up to mid 2016).</p>\\n<p>- Update width of drop downs so they're as wide as the text (long text is cut off).</p>\\n<p>- Given the current design, if a model only has 1 trim or year available then present the options and the class. Do not make the user click only 1 option to get the result.</p>\\n<p>- Add data for excluded vehicles.</p>\\n<p>- Add an option for modified classes (based on the BASE class and/or other criteria).</p>\\n<p>- Improved navigation using only the keyboard.</p>\\n<p>- Make sure the site is mobile friendly.</p>\\n<p>- Review and update model\\\\trim information. Right now you will see either (other) or (NOC) when there is no specific data provided in the Rule Book, I'd like to make this consistent.</p>\\n<p>- Potentially get support from the SCCA to handle\\\\maintain the data, provide updates and manage rules for the modified classes.</p>\\n\\n<form>\\n<input type=\\\"button\\\" value=\\\"Submit feedback\\\" onclick=\\\"window.location.href='https://peachesmotorsports.com/contact'\\\" />\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pablo.chois/Documents/Solo/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/pablo.chois/Documents/Solo/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { CarDataComponent } from './car-data/car-data.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { CarDataService } from './car-data.service';\n\nimport {MatSelectModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {MatCardModule} from '@angular/material/card';\n\n\n@NgModule({\n  exports: [\n    MatSelectModule,\n    CdkTableModule,\n    MatCardModule\n  ]\n})\nexport class DemoMaterialModule {}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CarDataComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DemoMaterialModule\n  ],\n  providers: [CarDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/pablo.chois/Documents/Solo/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Year, Make, Model, Trim, Class } from './car-data';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CarDataComponent } from './car-data/car-data.component';\n\n@Injectable()\nexport class CarDataService {\n\n  private makesUrl = 'https://solo-api-pms.herokuapp.com/api/solo/makes';  // URL to web api to retrieve makes\n\n  private modelsUrl = 'https://solo-api-pms.herokuapp.com/api/solo/models';  // URL to web api to retrieve models\n\n  private trimsUrl = 'https://solo-api-pms.herokuapp.com/api/solo/trims';  // URL to web api to retrieve trims\n\n  private yearsUrl = 'https://solo-api-pms.herokuapp.com/api/solo/years';  // URL to web api to retrieve years (scenarios 1, 2, and 4)\n\n  private yearsS3Url = 'https://solo-api-pms.herokuapp.com/api/solo/yearss3';  // URL to web api to retrieve years (scenario 3)\n\n  private classS1Url = 'https://solo-api-pms.herokuapp.com/api/solo/s1';  // URL to web api to retrieve class (scenario 1)\n\n  private classS2Url = 'https://solo-api-pms.herokuapp.com/api/solo/s2';  // URL to web api to retrieve class (scenario 2)\n\n  private classS3Url = 'https://solo-api-pms.herokuapp.com/api/solo/s3';  // URL to web api to retrieve class (scenario 3)\n\n  private classS4Url = 'https://solo-api-pms.herokuapp.com/api/solo/s4';  // URL to web api to retrieve class (scenario 4)\n\n//  private classS4Url = 'http://localhost:8080/api/solo/s4';  // URL to web api to retrieve class (scenario 4)\n\n  constructor(private http: HttpClient) { }\n\n// functions to call the different URLs, introducing the required elements in the URL query\n    getMake(): Observable<Make[]> {\n    return this.http.get<Make[]>(this.makesUrl);\n  }\n\n    getModel(make_id: number): Observable<Model[]> {\n      const url = `${this.modelsUrl}/?makeId=${make_id}`;\n      return this.http.get<Model[]>(url);\n    }\n\n    getTrim(make_id: number, model_id: number): Observable<Trim[]> {\n      const url = `${this.trimsUrl}/?makeId=${make_id}&modelId=${model_id}`;\n      return this.http.get<Trim[]>(url);\n    }\n\n    getYear(make_id: number, model_id: number, trim_id: number): Observable<Year[]> {\n      const url = `${this.yearsUrl}/?makeId=${make_id}&modelId=${model_id}&trimId=${trim_id}`;\n      return this.http.get<Year[]>(url);\n    }\n\n    getYearS3(make_id: number, model_id: number): Observable<Year[]> {\n      const url = `${this.yearsS3Url}/?makeId=${make_id}&modelId=${model_id}`;\n      return this.http.get<Year[]>(url);\n    }\n\n    getScenario1(make_id: number, model_id: number): Observable<Class[]> {\n      const url = `${this.classS1Url}/?makeId=${make_id}&modelId=${model_id}`;\n      return this.http.get<Class[]>(url);\n    }\n\n    getScenario2(make_id: number, model_id: number, trim_id: number): Observable<Class[]> {\n      const url = `${this.classS2Url}/?makeId=${make_id}&modelId=${model_id}&trimId=${trim_id}`;\n      return this.http.get<Class[]>(url);\n    }\n\n    getScenario3(make_id: number, model_id: number, year_id: number): Observable<Class[]> {\n      const url = `${this.classS3Url}/?makeId=${make_id}&modelId=${model_id}&yearId=${year_id}`;\n      return this.http.get<Class[]>(url);\n    }\n\n    getScenario4(make_id: number, model_id: number, trim_id: number, year_id: number): Observable<Class[]> {\n      const url = `${this.classS4Url}/?makeId=${make_id}&modelId=${model_id}&trimId=${trim_id}&yearId=${year_id}`;\n      return this.http.get<Class[]>(url);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/pablo.chois/Documents/Solo/src/app/car-data.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.base-class {\\n  width: 300px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pablo.chois/Documents/Solo/src/app/car-data/car-data.component.css\n// module id = ../../../../../src/app/car-data/car-data.component.css\n// module chunks = main","module.exports = \"<h2> Select the available data that matches your vehicle. </h2>\\n\\n<mat-form-field>\\n  <mat-select placeholder=\\\"Select a make\\\" (change)=\\\"getModels($event)\\\" [(ngModel)]=\\\"selectedMake\\\">\\n    <mat-option *ngFor=\\\"let make of makes\\\" [value]=\\\"make.id\\\">{{ make.name }}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<mat-form-field *ngIf=\\\"models.length > 0\\\">\\n  <mat-select placeholder=\\\"Select a model\\\" (change)=\\\"getTrims($event)\\\" [(ngModel)]=\\\"selectedModel\\\">\\n    <mat-option *ngFor=\\\"let model of models\\\" [value]=\\\"model.model_id\\\">{{ model.name }}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<mat-form-field *ngIf=\\\"trims.length > 0\\\">\\n  <mat-select placeholder=\\\"Select a trim\\\" (change)=\\\"getYears($event)\\\" [(ngModel)]=\\\"selectedTrim\\\">\\n    <mat-option *ngFor=\\\"let trim of trims\\\" [value]=\\\"trim.trim_id\\\">{{ trim.name }}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<mat-form-field *ngIf=\\\"years.length > 0\\\">\\n  <mat-select placeholder=\\\"Select a year\\\" (change)=\\\"getScenario4Class($event)\\\" [(ngModel)]=\\\"selectedYear\\\">\\n    <mat-option *ngFor=\\\"let year of years\\\" [value]=\\\"year.year_id\\\">{{ year.name }}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<mat-form-field *ngIf=\\\"yearsS3.length > 0\\\">\\n  <mat-select placeholder=\\\"Select a year\\\" (change)=\\\"getScenario3Class($event)\\\" [(ngModel)]=\\\"selectedYearS3\\\">\\n    <mat-option *ngFor=\\\"let years3 of yearsS3\\\" [value]=\\\"years3.year_id\\\">{{ years3.name }}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<div *ngIf=\\\"scenario1.length > 0\\\">\\n<mat-card *ngFor=\\\"let s1 of scenario1\\\" [(ngModel)]=\\\"selectedClassS1\\\" class=\\\"base-class\\\">Your base class is: {{s1.name}}</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"scenario2.length > 0\\\">\\n<mat-card *ngFor=\\\"let s2 of scenario2\\\" [(ngModel)]=\\\"selectedClassS2\\\" class=\\\"base-class\\\">Your base class is: {{s2.name}}</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"scenario3.length > 0\\\">\\n<mat-card *ngFor=\\\"let s3 of scenario3\\\" [(ngModel)]=\\\"selectedClassS3\\\" class=\\\"base-class\\\">Your base class is: {{s3.name}}</mat-card>\\n</div>\\n\\n<div *ngIf=\\\"scenario4.length > 0\\\">\\n<mat-card *ngFor=\\\"let s4 of scenario4\\\" [(ngModel)]=\\\"selectedClassS4\\\" class=\\\"base-class\\\">Your base class is: {{s4.name}}</mat-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pablo.chois/Documents/Solo/src/app/car-data/car-data.component.html\n// module id = ../../../../../src/app/car-data/car-data.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CarDataService } from '../car-data.service';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n  selector: 'app-car-data',\n  templateUrl: './car-data.component.html',\n  styleUrls: ['./car-data.component.css']\n})\nexport class CarDataComponent implements OnInit {\n\n// define the models tied to the HTML\n  selectedModel: string = '';\n  selectedTrim: string = '';\n  selectedYear: string = '';\n  selectedYearS3: string = '';\n  selectedClassS1: string = '';\n  selectedClassS2: string = '';\n  selectedClassS3: string = '';\n  selectedClassS4: string = '';\n\n// define the elements that will store the data coming back from the APIs\n  makes = [];\n  models = [];\n  trims = [];\n  years = [];\n  yearsS3 = [];\n  scenario1 = [];\n  scenario2 = [];\n  scenario3 = [];\n  scenario4 = [];\n\n// define an element that will hold the parameters required to make an API call\n// it will be \"reset\" depending on the user's actions\n  query_data = {\n    make_id: 0,\n    model_id: 0,\n    trim_id: 0,\n    year_id: 0\n  };\n\n  constructor(private cardataService: CarDataService) { }\n\n// call get makes by default, as it is the first thing the user will select\n  ngOnInit() {\n    this.getMakes();\n  }\n\n// reset values for selected\\displayed classes to provide empty selections when a user starts a new flow\n  resetClasses() {\n    this.selectedClassS1 = '';\n    this.selectedClassS2 = '';\n    this.selectedClassS3 = '';\n    this.selectedClassS4 = '';\n    this.scenario1 = [];\n    this.scenario2 = [];\n    this.scenario3 = [];\n    this.scenario4 = [];\n  }\n\n// reset values for selected\\displayed models to provide empty selections when a user starts a new flow\n  resetModels() {\n    this.selectedModel = '';\n    this.models = [];\n  }\n\n// reset values for selected\\displayed trims to provide empty selections when a user starts a new flow\n  resetTrims() {\n    this.selectedTrim = '';\n    this.trims = [];\n  }\n\n// reset values for selected\\displayed years to provide empty selections when a user starts a new flow\n  resetYears() {\n    this.selectedYear = '';\n    this.years = [];\n  }\n\n  // reset values for selected\\displayed years scenario 3 to provide empty selections when a user starts a new flow\n  resetYearsS3() {\n    this.selectedYearS3 = '';\n    this.yearsS3 = [];\n  }\n\n// get makes function, assigns result to the makes element\n  getMakes(): void {\n    this.cardataService.getMake()\n    .subscribe(makes => this.makes = makes);\n  }\n\n// get models function, assigns result to the models element\n// resets values for models, trims, years and classes when the user starts a new flow\n// resets the value of the query parameters\n  getModels(item: MatSelectChange): void {\n    this.resetModels();\n    this.resetTrims();\n    this.resetYears();\n    this.resetYearsS3();\n    this.resetClasses();\n    this.query_data = {\n      make_id: item.value,\n      model_id: 0,\n      trim_id: 0,\n      year_id: 0\n    };\n    this.cardataService.getModel(this.query_data.make_id)\n    .subscribe(models => this.models = models);\n  }\n\n// get trims function, assigns result to the trims element\n// resets values for trims, years and classes when the user starts a new flow\n// resets the value of the query parameters\n// if there are no trims, triggers scenario 3(YearsS3)\n// if scenario 3 is false, triggers secenario 1\n  getTrims(item: MatSelectChange): void {\n    this.resetTrims();\n    this.resetYears();\n    this.resetYearsS3();\n    this.resetClasses();\n    const make_id = this.query_data.make_id;\n    this.query_data = {\n      make_id: make_id,\n      model_id: item.value,\n      trim_id: 0,\n      year_id: 0\n    };\n    this.cardataService.getTrim(this.query_data.make_id, this.query_data.model_id)\n    .subscribe(trims => {\n      this.trims = trims\n      if(this.trims.length == 0){\n        this.getYearsS3(this.query_data.model_id);\n        if(this.yearsS3.length == 0){\n          this.getScenario1Class(this.query_data.make_id, this.query_data.model_id);\n        }\n      }\n    });\n  }\n\n// get years function, assigns result to the years element\n// resets values for years and classes when the user starts a new flow\n// resets the value of the query parameters\n// if there are no years, triggers scenario 2\n  getYears(item: MatSelectChange): void {\n    this.resetYears();\n    this.resetYearsS3();\n    this.resetClasses();\n    const make_id = this.query_data.make_id;\n    const model_id = this.query_data.model_id;\n    this.query_data = {\n      make_id: make_id,\n      model_id: model_id,\n      trim_id: item.value,\n      year_id: 0\n    };\n    this.cardataService.getYear(this.query_data.make_id, this.query_data.model_id, this.query_data.trim_id)\n    .subscribe(years => {\n      this.years = years\n      if(this.years.length == 0){\n        this.getScenario2Class(this.query_data.make_id, this.query_data.model_id, this.query_data.trim_id);\n        }\n    });\n}\n\n// get years for scenario 3 function, assigns result to the yearss3 element\n// resets values for years and classes when the user starts a new flow\n// resets the value of the query parameters\n  getYearsS3(model_id: number): void {\n    this.resetYears();\n    this.resetYearsS3();\n    this.resetClasses();\n    const make_id = this.query_data.make_id;\n    this.query_data = {\n      make_id: make_id,\n      model_id: model_id,\n      trim_id: 0,\n      year_id: 0\n    };\n    this.cardataService.getYearS3(this.query_data.make_id, this.query_data.model_id)\n    .subscribe(yearsS3 => this.yearsS3 = yearsS3);\n  }\n\n// get the class for scenario 1, assigns the result to the scenario1 element\n// resets values for classes\n// doesn't reset values for the query parameter because they are passed in\n  getScenario1Class(make_id: number, model_id: number): void {\n    this.resetClasses();\n    this.cardataService.getScenario1(this.query_data.make_id, this.query_data.model_id)\n    .subscribe(scenario1 => this.scenario1 = scenario1);\n  }\n\n  // get the class for scenario 2, assigns the result to the scenario2 element\n  // resets values for classes\n  // doesn't reset values for the query parameter because they are passed in\n  getScenario2Class(make_id: number, model_id: number, trim_id: number): void {\n    this.resetClasses();\n    this.cardataService.getScenario2(this.query_data.make_id, this.query_data.model_id, this.query_data.trim_id)\n    .subscribe(scenario2 => this.scenario2 = scenario2);\n    }\n\n    // get the class for scenario 3, assigns the result to the scenario3 element\n    // resets values for classes\n    // resets the value of the query parameters\n  getScenario3Class(item: MatSelectChange): void {\n    this.resetClasses();\n    const make_id = this.query_data.make_id;\n    const model_id = this.query_data.model_id;\n    this.query_data = {\n      make_id: make_id,\n      model_id: model_id,\n      trim_id: 0,\n      year_id: item.value\n    };\n    this.cardataService.getScenario3(this.query_data.make_id, this.query_data.model_id, this.query_data.year_id)\n    .subscribe(scenario3 => this.scenario3 = scenario3);\n  }\n\n  // get the class for scenario 4, assigns the result to the scenario4 element\n  // resets values for classes\n  // resets the value of the query parameters\n  getScenario4Class(item: MatSelectChange): void {\n    this.resetClasses();\n    const make_id = this.query_data.make_id;\n    const model_id = this.query_data.model_id;\n    const trim_id = this.query_data.trim_id;\n    this.query_data = {\n      make_id: make_id,\n      model_id: model_id,\n      trim_id: trim_id,\n      year_id: item.value\n    };\n    this.cardataService.getScenario4(this.query_data.make_id, this.query_data.model_id, this.query_data.trim_id, this.query_data.year_id)\n    .subscribe(scenario4 => this.scenario4 = scenario4);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/pablo.chois/Documents/Solo/src/app/car-data/car-data.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/pablo.chois/Documents/Solo/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/pablo.chois/Documents/Solo/src/main.ts"],"sourceRoot":"webpack:///"}